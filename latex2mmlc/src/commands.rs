use mathml_renderer::ast::Node;
use mathml_renderer::attribute::{
    FracAttr, MathSpacing, MathVariant, OpAttr, Size, Style, TextTransform,
};
use mathml_renderer::ops::{self, Rel};

use crate::predefined;
use crate::token::Token;

static COMMANDS: phf::Map<&'static str, Token> = phf::phf_map! {
    " " => Token::NonBreakingSpace,
    "!" => Token::Space("-0.1667"),
    "#" => Token::Letter('#'),
    "$" => Token::Letter('$'),
    "%" => Token::Letter('%'),
    "&" => Token::OpAmpersand,
    "," => Token::Space("0.1667"),
    ":" => Token::Space("0.2222"),
    ";" => Token::Space("0.2778"),
    ">" => Token::Space("0.2222"),
    "\\" => Token::NewLine,
    "_" => Token::Letter('_'),
    "AA" => Token::Letter('Å'), // TODO: valid in text mode only
    "AE" => Token::Letter('Æ'),
    "Alpha" => Token::UprightLetter('Α'),
    "And" => Token::OpAmpersand,
    "Bbbk" => Token::Letter('𝕜'),
    "Beta" => Token::UprightLetter('Β'),
    "Big" => Token::Big(Size::Scale2),
    "Bigg" => Token::Big(Size::Scale4),
    "Biggl" => Token::Big(Size::Scale4),
    "Biggr" => Token::Big(Size::Scale4),
    "Bigl" => Token::Big(Size::Scale2),
    "Bigr" => Token::Big(Size::Scale2),
    "Box" => Token::Letter('◻'),
    "Bumpeq" => Token::Relation(ops::GEOMETRICALLY_EQUIVALENT_TO),
    "Cap" => Token::Relation(ops::DOUBLE_INTERSECTION),
    "Chi" => Token::UprightLetter('Χ'),
    "Colon" => Token::Relation(ops::PROPORTION),
    "Cup" => Token::Relation(ops::DOUBLE_UNION),
    "DH" => Token::Letter('Ð'),
    "Dagger" => Token::Letter('‡'),
    "Delta" => Token::UprightLetter('Δ'),
    "Diamond" => Token::Letter('◊'),
    "Doteq" => Token::Relation(ops::GEOMETRICALLY_EQUAL_TO),
    "Downarrow" => Token::Delimiter(ops::DOWNWARDS_DOUBLE_ARROW),
    "Epsilon" => Token::UprightLetter('Ε'),
    "Eta" => Token::UprightLetter('Η'),
    "Finv" => Token::Letter('Ⅎ'),
    "Game" => Token::Letter('⅁'),
    "Gamma" => Token::UprightLetter('Γ'),
    "Im" => Token::Letter('ℑ'),
    "Iota" => Token::UprightLetter('Ι'),
    "Join" => Token::Relation(ops::BOWTIE),
    "Kappa" => Token::UprightLetter('Κ'),
    "L" => Token::Letter('Ł'),
    "Lambda" => Token::UprightLetter('Λ'),
    "Leftarrow" => Token::Relation(ops::LEFTWARDS_DOUBLE_ARROW),
    "Leftrightarrow" => Token::Relation(ops::LEFT_RIGHT_DOUBLE_ARROW),
    "Lleftarrow" => Token::Relation(ops::LEFTWARDS_TRIPLE_ARROW),
    "Longleftarrow" => Token::Relation(ops::LONG_LEFTWARDS_DOUBLE_ARROW),
    "Longleftrightarrow" => Token::Relation(ops::LONG_LEFT_RIGHT_DOUBLE_ARROW),
    "Longrightarrow" => Token::Relation(ops::LONG_RIGHTWARDS_DOUBLE_ARROW),
    "Lsh" => Token::Relation(ops::UPWARDS_ARROW_WITH_TIP_LEFTWARDS),
    "Mu" => Token::UprightLetter('Μ'),
    "NG" => Token::Letter('Ŋ'),
    "Nu" => Token::UprightLetter('Ν'),
    "O" => Token::Letter('Ø'),
    "OE" => Token::Letter('Œ'),
    "Omega" => Token::UprightLetter('Ω'),
    "Omicron" => Token::UprightLetter('Ο'),
    "P" => Token::Letter('¶'),
    "Phi" => Token::UprightLetter('Φ'),
    "Pi" => Token::UprightLetter('Π'),
    "Pr" => Token::Function("Pr"),
    "Psi" => Token::UprightLetter('Ψ'),
    "RR" => Token::CustomCmd(0, &Node::TextTransform {
        tf: MathVariant::Transform(TextTransform::DoubleStruck),
        content: &Node::SingleLetterIdent('R', false),
    }),
    "Re" => Token::Letter('ℜ'),
    "Rho" => Token::UprightLetter('Ρ'),
    "Rightarrow" => Token::Relation(ops::RIGHTWARDS_DOUBLE_ARROW),
    "Rrightarrow" => Token::Relation(ops::RIGHTWARDS_TRIPLE_ARROW),
    "Rsh" => Token::Relation(ops::UPWARDS_ARROW_WITH_TIP_RIGHTWARDS),
    "S" => Token::Letter('§'),
    "Sigma" => Token::UprightLetter('Σ'),
    "Subset" => Token::Relation(ops::DOUBLE_SUBSET),
    "Supset" => Token::Relation(ops::DOUBLE_SUPERSET),
    "TH" => Token::Letter('Þ'),
    "Tau" => Token::UprightLetter('Τ'),
    "Theta" => Token::UprightLetter('Θ'),
    "Uparrow" => Token::Delimiter(ops::UPWARDS_DOUBLE_ARROW),
    "Updownarrow" => Token::Delimiter(ops::UP_DOWN_DOUBLE_ARROW),
    "Upsilon" => Token::UprightLetter('Υ'),
    "Vdash" => Token::Relation(ops::FORCES),
    "Vert" => Token::Delimiter(ops::DOUBLE_VERTICAL_LINE),
    "Vvdash" => Token::Relation(ops::TRIPLE_VERTICAL_BAR_RIGHT_TURNSTILE),
    "Xi" => Token::UprightLetter('Ξ'),
    "Yleft" => Token::Relation(ops::LEFTWARDS_ARROW_TAIL),
    "Yright" => Token::Relation(ops::RIGHTWARDS_ARROW_TAIL),
    "Zeta" => Token::UprightLetter('Ζ'),
    "a" => Token::Letter('å'),
    "acute" => Token::OverUnder(ops::ACUTE_ACCENT, true, None),
    "ae" => Token::Letter('æ'),
    "aleph" => Token::Letter('ℵ'),
    "alpha" => Token::Letter('α'),
    "amalg" => Token::Relation(ops::AMALGAMATION_OR_COPRODUCT),
    "angle" => Token::Letter(ops::ANGLE),
    "approx" => Token::Relation(ops::ALMOST_EQUAL_TO),
    "approxeq" => Token::Relation(ops::ALMOST_EQUAL_OR_EQUAL_TO),
    "arccos" => Token::Function("arccos"),
    "arceq" => Token::Relation(ops::CORRESPONDS_TO), // from "stix"
    "arcsin" => Token::Function("arcsin"),
    "arctan" => Token::Function("arctan"),
    "arg" => Token::Function("arg"),
    "ascnode" => Token::Letter('☊'),
    "ast" => Token::Relation(ops::ASTERISK_OPERATOR),
    "astrosun" => Token::Letter('☉'),
    "asymp" => Token::Relation(ops::EQUIVALENT_TO),
    "awint" => Token::Integral(ops::ANTICLOCKWISE_INTEGRATION),
    "backdprime" => Token::Relation(ops::REVERSED_DOUBLE_PRIME),
    "backepsilon" => Token::Relation(ops::SMALL_CONTAINS_AS_MEMBER),
    "backprime" => Token::Relation(ops::REVERSED_PRIME),
    "backsim" => Token::Relation(ops::REVERSED_TILDE),
    "backsimeq" => Token::Relation(ops::REVERSED_TILDE_EQUALS),
    "backslash" => Token::Delimiter(ops::REVERSE_SOLIDUS),
    "backtrprime" => Token::Relation(ops::REVERSED_TRIPLE_PRIME),
    "bar" => Token::OverUnder(ops::MACRON, true, Some(OpAttr::StretchyFalse)),
    "barwedge" => Token::Relation(ops::NAND),
    "because" => Token::Relation(ops::BECAUSE),
    "begin" => Token::Begin,
    "beta" => Token::Letter('β'),
    "beth" => Token::Letter('ℶ'),
    "between" => Token::Relation(ops::BETWEEN),
    "big" => Token::Big(Size::Scale1),
    "bigcap" => Token::BigOp(ops::N_ARY_INTERSECTION),
    "bigcirc" => Token::Letter(ops::LARGE_CIRCLE),
    "bigcup" => Token::BigOp(ops::N_ARY_UNION),
    "bigcupdot" => Token::BigOp(ops::N_ARY_UNION_OPERATOR_WITH_DOT),
    "bigdoublevee" => Token::BigOp(ops::TWO_LOGICAL_OR_OPERATOR),
    "bigdoublewedge" => Token::BigOp(ops::TWO_LOGICAL_AND_OPERATOR),
    "bigg" => Token::Big(Size::Scale3),
    "biggl" => Token::Big(Size::Scale3),
    "biggr" => Token::Big(Size::Scale3),
    "bigl" => Token::Big(Size::Scale1),
    "bigodot" => Token::BigOp(ops::N_ARY_CIRCLED_DOT_OPERATOR),
    "bigoplus" => Token::BigOp(ops::N_ARY_CIRCLED_PLUS_OPERATOR),
    "bigotimes" => Token::BigOp(ops::N_ARY_CIRCLED_TIMES_OPERATOR),
    "bigr" => Token::Big(Size::Scale1),
    "bigsqcap" => Token::BigOp(ops::N_ARY_SQUARE_INTERSECTION_OPERATOR),
    "bigsqcup" => Token::BigOp(ops::N_ARY_SQUARE_UNION_OPERATOR),
    "bigstar" => Token::Letter(ops::BLACK_STAR),
    "bigtimes" => Token::BigOp(ops::N_ARY_TIMES_OPERATOR),
    "bigtriangledown" => Token::Letter(ops::WHITE_DOWN_POINTING_TRIANGLE),
    "bigtriangleup" => Token::Letter(ops::WHITE_UP_POINTING_TRIANGLE),
    "biguplus" => Token::BigOp(ops::N_ARY_UNION_OPERATOR_WITH_PLUS),
    "bigvee" => Token::BigOp(ops::N_ARY_LOGICAL_OR),
    "bigwedge" => Token::BigOp(ops::N_ARY_LOGICAL_AND),
    "binom" => Token::Binom(None),
    "blacklozenge" => Token::Letter(ops::BLACK_LOZENGE),
    "blacksquare" => Token::Letter(ops::BLACK_SQUARE),
    "blacktriangle" => Token::Letter(ops::BLACK_UP_POINTING_TRIANGLE),
    "blacktriangledown" => Token::Letter(ops::BLACK_DOWN_POINTING_TRIANGLE),
    "blacktriangleleft" => Token::Letter(ops::BLACK_LEFT_POINTING_TRIANGLE),
    "blacktriangleright" => Token::Letter(ops::BLACK_RIGHT_POINTING_TRIANGLE),
    "bm" => Token::Transform(MathVariant::Transform(TextTransform::BoldItalic)),
    "bmod" => Token::CustomCmd(0, &Node::Row {
        nodes: &[&Node::Space("0.2222"), &Node::Text("mod"), &Node::Space("0.2222")],
        style: None
    }),
    "boldsymbol" => Token::Transform(MathVariant::Transform(TextTransform::BoldItalic)),
    "bot" => Token::Letter(ops::UP_TACK),
    "botdoteq" => Token::Relation(ops::EQUALS_SIGN_WITH_DOT_BELOW),
    "boxbox" => Token::Relation(ops::SQUARED_SQUARE),
    "boxbslash" => Token::Relation(ops::SQUARED_FALLING_DIAGONAL_SLASH),
    "boxdot" => Token::Relation(ops::SQUARED_DOT_OPERATOR),
    "boxminus" => Token::Relation(ops::SQUARED_MINUS),
    "boxplus" => Token::Relation(ops::SQUARED_PLUS),
    "boxslash" => Token::Relation(ops::SQUARED_RISING_DIAGONAL_SLASH),
    "boxtimes" => Token::Relation(ops::SQUARED_TIMES),
    "breve" => Token::OverUnder(ops::BREVE, true, None),
    "bullet" => Token::Relation(ops::BULLET_OPERATOR),
    "bumpeq" => Token::Relation(ops::DIFFERENCE_BETWEEN),
    "cap" => Token::Relation(ops::INTERSECTION),
    "cdot" => Token::BinaryOp(ops::MIDDLE_DOT),
    "cdots" => Token::CustomCmd(0, &Node::Row {
        nodes: &[
            &Node::Operator(ops::MIDDLE_DOT.as_op(), None),
            &Node::OperatorWithSpacing {
                op:ops::MIDDLE_DOT.as_op(),
                left: Some(MathSpacing::Zero),
                right: Some(MathSpacing::Zero),
            },
            &Node::Operator(ops::MIDDLE_DOT.as_op(), None),
        ],
        style:None
    }),
    "centerdot" => Token::Relation(ops::BULLET_OPERATOR),
    "cfrac" => Token::Frac(Some(FracAttr::CFracStyle)),
    "check" => Token::OverUnder(ops::CARON, true, Some(OpAttr::StretchyFalse)),
    "checkmark" => Token::Letter('✓'),
    "chi" => Token::Letter('χ'),
    "circ" => Token::Relation(ops::RING_OPERATOR),
    "circeq" => Token::Relation(ops::RING_EQUAL_TO),
    "circlearrowleft" => Token::Relation(ops::ANTICLOCKWISE_OPEN_CIRCLE_ARROW),
    "circlearrowright" => Token::Relation(ops::CLOCKWISE_OPEN_CIRCLE_ARROW),
    "circledR" => Token::Letter(ops::CIRCLED_LATIN_CAPITAL_LETTER_R),
    "circledS" => Token::Letter(ops::CIRCLED_LATIN_CAPITAL_LETTER_S),
    "circledast" => Token::Relation(ops::CIRCLED_ASTERISK_OPERATOR),
    "circledcirc" => Token::Relation(ops::CIRCLED_RING_OPERATOR),
    "circleddash" => Token::Relation(ops::CIRCLED_DASH),
    "cirfnint" => Token::Integral(ops::CIRCULATION_FUNCTION),
    "clubsuit" => Token::Letter('♣'),
    "colon" => Token::Letter(':'),
    "coloneq" => Token::Relation(ops::COLON_EQUALS),
    "coloneqq" => Token::Relation(ops::COLON_EQUALS),
    "complement" => Token::Letter(ops::COMPLEMENT),
    "cong" => Token::Relation(ops::APPROXIMATELY_EQUAL_TO),
    "coprod" => Token::BigOp(ops::N_ARY_COPRODUCT),
    "copyright" => Token::Letter('©'),
    "cos" => Token::Function("cos"),
    "cosh" => Token::Function("cosh"),
    "cot" => Token::Function("cot"),
    "coth" => Token::Function("coth"),
    "csc" => Token::Function("csc"),
    "cup" => Token::Relation(ops::UNION),
    "curlyeqprec" => Token::Relation(ops::EQUAL_TO_OR_PRECEDES),
    "curlyeqsucc" => Token::Relation(ops::EQUAL_TO_OR_SUCCEEDS),
    "curlyvee" => Token::Relation(ops::CURLY_LOGICAL_OR),
    "curlywedge" => Token::Relation(ops::CURLY_LOGICAL_AND),
    "curvearrowleft" => Token::Relation(ops::ANTICLOCKWISE_TOP_SEMICIRCLE_ARROW),
    "curvearrowright" => Token::Relation(ops::CLOCKWISE_TOP_SEMICIRCLE_ARROW),
    "d" => Token::CustomCmd(0, &Node::TextTransform {
        tf: MathVariant::Normal,
        content: &Node::SingleLetterIdent('d', false),
    }),
    "dag" => Token::Letter('†'),
    "dagger" => Token::Letter('†'),
    "daleth" => Token::Letter('ℸ'),
    "dashcolon" => Token::Relation(ops::EXCESS),
    "dashv" => Token::Relation(ops::LEFT_TACK),
    "dbinom" => Token::Binom(Some(FracAttr::DisplayStyleTrue)),
    "dblcolon" => Token::Relation(ops::PROPORTION),
    "ddag" => Token::Letter('‡'),
    "ddagger" => Token::Letter('‡'),
    "ddot" => Token::OverUnder(ops::DIAERESIS, true, None),
    "ddots" => Token::Relation(ops::DOWN_RIGHT_DIAGONAL_ELLIPSIS),
    "deg" => Token::Function("deg"),
    "delta" => Token::Letter('δ'),
    "det" => Token::Function("det"),
    "dfrac" => Token::Frac(Some(FracAttr::DisplayStyleTrue)),
    "dh" => Token::Letter('ð'),
    "diamond" => Token::Relation(ops::DIAMOND_OPERATOR),
    "diamondsuit" => Token::Letter('♢'),
    "digamma" => Token::Letter('ϝ'),
    "dim" => Token::Function("dim"),
    "displaystyle" => Token::Style(Style::DisplayStyle),
    "div" => Token::BinaryOp(ops::DIVISION_SIGN),
    "divideontimes" => Token::Relation(ops::DIVISION_TIMES),
    "dj" => Token::Letter('đ'),
    "dot" => Token::OverUnder(ops::DOT_ABOVE, true, None),
    "doteq" => Token::Relation(ops::APPROACHES_THE_LIMIT),
    "doteqdot" => Token::Relation(ops::GEOMETRICALLY_EQUAL_TO),
    "dotplus" => Token::BinaryOp(ops::DOT_PLUS),
    "dots" => Token::Relation(ops::HORIZONTAL_ELLIPSIS),
    "dotsminusdots" => Token::Relation(ops::GEOMETRIC_PROPORTION),
    "doublebarwedge" => Token::Relation(ops::LOGICAL_AND_WITH_DOUBLE_OVERBAR),
    "downarrow" => Token::Delimiter(ops::DOWNWARDS_ARROW),
    "downdownarrows" => Token::Relation(ops::DOWNWARDS_PAIRED_ARROWS),
    "downharpoonleft" => Token::Relation(ops::DOWNWARDS_HARPOON_WITH_BARB_LEFTWARDS),
    "downharpoonright" => Token::Relation(ops::DOWNWARDS_HARPOON_WITH_BARB_RIGHTWARDS),
    "dprime" => Token::Relation(ops::DOUBLE_PRIME),
    "earth" => Token::Letter('♁'),
    "ell" => Token::Letter('ℓ'),
    "empty" => Token::Function("∅︀"), // these are two unicode characters
    "emptyset" => Token::Function("∅︀"), // these are two unicode characters
    "end" => Token::End,
    "epsilon" => Token::Letter('ϵ'),
    "eqcirc" => Token::Relation(ops::RING_IN_EQUAL_TO),
    "eqcolon" => Token::Relation(ops::EQUALS_COLON),
    "eqqcolon" => Token::Relation(ops::EQUALS_COLON),
    "eqdef" => Token::Relation(ops::EQUAL_TO_BY_DEFINITION), // from "stix"
    "eqsim" => Token::Relation(ops::MINUS_TILDE),
    "eqslantgtr" => Token::Relation(ops::SLANTED_EQUAL_TO_OR_GREATER_THAN),
    "eqslantless" => Token::Relation(ops::SLANTED_EQUAL_TO_OR_LESS_THAN),
    "equiv" => Token::Relation(ops::IDENTICAL_TO),
    "erf" => Token::Function("erf"),
    "erfc" => Token::Function("erfc"),
    "eta" => Token::Letter('η'),
    "eth" => Token::Letter('ð'),
    "euro" => Token::Letter('€'),
    "exists" => Token::Relation(ops::THERE_EXISTS),
    "exp" => Token::Function("exp"),
    "fallingdotseq" => Token::Relation(ops::APPROXIMATELY_EQUAL_TO_OR_THE_IMAGE_OF),
    "fcmp" => Token::Relation(ops::Z_NOTATION_SCHEMA_COMPOSITION),
    "fint" => Token::Integral(ops::INTEGRAL_AVERAGE_WITH_SLASH),
    "flat" => Token::Letter('♭'),
    "forall" => Token::Relation(ops::FOR_ALL),
    "frac" => Token::Frac(None),
    "frown" => Token::Relation(ops::FROWN),
    "gamma" => Token::Letter('γ'),
    "gcd" => Token::Function("gcd"),
    "ge" => Token::Relation(ops::GREATER_THAN_OR_EQUAL_TO),
    "genfrac" => Token::Genfrac,
    "geq" => Token::Relation(ops::GREATER_THAN_OR_EQUAL_TO),
    "geqq" => Token::Relation(ops::GREATER_THAN_OVER_EQUAL_TO),
    "geqslant" => Token::Relation(ops::GREATER_THAN_OR_SLANTED_EQUAL_TO),
    "gets" => Token::Relation(ops::LEFTWARDS_ARROW),
    "gg" => Token::Relation(ops::MUCH_GREATER_THAN),
    "gimel" => Token::Letter('ℷ'),
    "gneq" => Token::Relation(ops::GREATER_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO),
    "gneqq" => Token::Relation(ops::GREATER_THAN_BUT_NOT_EQUAL_TO),
    "grave" => Token::OverUnder(ops::GRAVE_ACCENT, true, None),
    "gt" => Token::OpGreaterThan,
    "gtrapprox" => Token::Relation(ops::GREATER_THAN_OR_APPROXIMATE),
    "gtrless" => Token::Relation(ops::GREATER_THAN_OR_LESS_THAN),
    "gtrsim" => Token::Relation(ops::GREATER_THAN_OR_EQUIVALENT_TO),
    "hat" => Token::OverUnder(ops::CIRCUMFLEX_ACCENT, true, Some(OpAttr::StretchyFalse)),
    "hbar" => Token::Letter('ℏ'),
    "heartsuit" => Token::Letter('♡'),
    "hom" => Token::Function("hom"),
    "hookleftarrow" => Token::Relation(ops::LEFTWARDS_ARROW_WITH_HOOK),
    "hookrightarrow" => Token::Relation(ops::RIGHTWARDS_ARROW_WITH_HOOK),
    "hslash" => Token::Letter('ℏ'),
    "iff" => Token::Relation(ops::LONG_LEFT_RIGHT_DOUBLE_ARROW),
    "iiiint" => Token::Integral(ops::QUADRUPLE_INTEGRAL_OPERATOR),
    "iiint" => Token::Integral(ops::TRIPLE_INTEGRAL),
    "iint" => Token::Integral(ops::DOUBLE_INTEGRAL),
    "imath" => Token::Letter('ı'),
    "impliedby" => Token::Relation(ops::LONG_LEFTWARDS_DOUBLE_ARROW),
    "implies" => Token::Relation(ops::LONG_RIGHTWARDS_DOUBLE_ARROW),
    "in" => Token::Relation(ops::ELEMENT_OF),
    "inf" => Token::Lim("inf"),
    "infty" => Token::Letter(ops::INFINITY),
    "int" => Token::Integral(ops::INTEGRAL),
    "intBar" => Token::Integral(ops::INTEGRAL_WITH_DOUBLE_STROKE),
    "intbar" => Token::Integral(ops::FINITE_PARTL_INTEGRAL),
    "intclockwise" => Token::Integral(ops::CLOCKWISE_INTEGRAL),
    "intercal" => Token::Relation(ops::INTERCALATE),
    "iota" => Token::Letter('ι'),
    "jmath" => Token::Letter('ȷ'),
    "jupiter" => Token::Letter('♃'),
    "kappa" => Token::Letter('κ'),
    "ker" => Token::Function("ker"),
    "kernelcontraction" => Token::Relation(ops::HOMOTHETIC),
    "l" => Token::Letter('ł'),
    "lBrace" => Token::Delimiter(ops::LEFT_WHITE_CURLY_BRACKET),
    "lVert" => Token::Delimiter(ops::DOUBLE_VERTICAL_LINE),
    "lambda" => Token::Letter('λ'),
    "land" => Token::Relation(ops::LOGICAL_AND),
    "langle" => Token::Delimiter(ops::MATHEMATICAL_LEFT_ANGLE_BRACKET),
    "lbrace" => Token::Delimiter(ops::LEFT_CURLY_BRACKET),
    "lbrack" => Token::Delimiter(ops::LEFT_SQUARE_BRACKET),
    "lceil" => Token::Delimiter(ops::LEFT_CEILING),
    "ldots" => Token::Relation(ops::HORIZONTAL_ELLIPSIS),
    "le" => Token::Relation(ops::LESS_THAN_OR_EQUAL_TO),
    "left" => Token::Left,
    "leftarrow" => Token::Relation(ops::LEFTWARDS_ARROW),
    "leftarrowtail" => Token::Relation(ops::LEFTWARDS_ARROW_WITH_TAIL),
    "leftharpoondown" => Token::Relation(ops::LEFTWARDS_HARPOON_WITH_BARB_DOWNWARDS),
    "leftharpoonup" => Token::Relation(ops::LEFTWARDS_HARPOON_WITH_BARB_UPWARDS),
    "leftleftarrows" => Token::Relation(ops::LEFTWARDS_PAIRED_ARROWS),
    "leftrightarrow" => Token::Relation(ops::LEFT_RIGHT_ARROW),
    "leftrightarrows" => Token::Relation(ops::LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW),
    "leftrightharpoons" => Token::Relation(ops::LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON),
    "leftrightsquigarrow" => Token::Relation(ops::LEFT_RIGHT_WAVE_ARROW),
    "leftthreetimes" => Token::Relation(ops::LEFT_SEMIDIRECT_PRODUCT),
    "leq" => Token::Relation(ops::LESS_THAN_OR_EQUAL_TO),
    "leqq" => Token::Relation(ops::LESS_THAN_OVER_EQUAL_TO),
    "leqslant" => Token::Relation(ops::LESS_THAN_OR_SLANTED_EQUAL_TO),
    "lessapprox" => Token::Relation(ops::LESS_THAN_OR_APPROXIMATE),
    "lessdot" => Token::Relation(ops::LESS_THAN_WITH_DOT),
    "lesseqgtr" => Token::Relation(ops::LESS_THAN_EQUAL_TO_OR_GREATER_THAN),
    "lesseqqgtr" => Token::Relation(ops::LESS_THAN_ABOVE_DOUBLE_LINE_EQUAL_ABOVE_GREATER_THAN),
    "lessgtr" => Token::Relation(ops::LESS_THAN_OR_GREATER_THAN),
    "lesssim" => Token::Relation(ops::LESS_THAN_OR_EQUIVALENT_TO),
    "lfloor" => Token::Delimiter(ops::LEFT_FLOOR),
    "lg" => Token::Function("lg"),
    "lgroup" => Token::Delimiter(ops::MATHEMATICAL_LEFT_FLATTENED_PARENTHESIS),
    "lhd" => Token::Relation(ops::NORMAL_SUBGROUP_OF),
    "lightning" => Token::Relation(ops::DOWNWARDS_ZIGZAG_ARROW),
    "lim" => Token::Lim("lim"),
    "liminf" => Token::Lim("lim inf"),
    "limits" => Token::Limits,
    "limsup" => Token::Lim("lim sup"),
    "ll" => Token::Relation(ops::MUCH_LESS_THAN),
    "llangle" => Token::Delimiter(ops::Z_NOTATION_LEFT_BINDING_BRACKET),
    "llbracket" => Token::Delimiter(ops::MATHEMATICAL_LEFT_WHITE_SQUARE_BRACKET),
    "llcorner" => Token::Letter(ops::BOTTOM_LEFT_CORNER),
    "lll" => Token::Relation(ops::VERY_MUCH_LESS_THAN),
    "llparenthesis" => Token::Delimiter(ops::Z_NOTATION_LEFT_IMAGE_BRACKET),
    "ln" => Token::Function("ln"),
    "lneq" => Token::Relation(ops::LESS_THAN_AND_SINGLE_LINE_NOT_EQUAL_TO),
    "lneqq" => Token::Relation(ops::LESS_THAN_BUT_NOT_EQUAL_TO),
    "lnot" => Token::Relation(ops::NOT_SIGN),
    "log" => Token::Function("log"),
    "longleftarrow" => Token::Relation(ops::LONG_LEFTWARDS_ARROW),
    "longleftrightarrow" => Token::Relation(ops::LONG_LEFT_RIGHT_ARROW),
    "longmapsto" => Token::Relation(ops::LONG_RIGHTWARDS_ARROW_FROM_BAR),
    "longrightarrow" => Token::Relation(ops::LONG_RIGHTWARDS_ARROW),
    "looparrowleft" => Token::Relation(ops::LEFTWARDS_ARROW_WITH_LOOP),
    "looparrowright" => Token::Relation(ops::RIGHTWARDS_ARROW_WITH_LOOP),
    "lor" => Token::Relation(ops::LOGICAL_OR),
    "lozenge" => Token::Letter('◊'),
    "lrcorner" => Token::Letter(ops::BOTTOM_RIGHT_CORNER),
    "lt" => Token::OpLessThan,
    "ltimes" => Token::Relation(ops::LEFT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT),
    "lvert" => Token::Delimiter(ops::VERTICAL_LINE),
    "maltese" => Token::Letter('✠'),
    "mapsto" => Token::Relation(ops::RIGHTWARDS_ARROW_FROM_BAR),
    "mars" => Token::Letter('♂'),
    "mathbb" => Token::Transform(MathVariant::Transform(TextTransform::DoubleStruck)),
    "mathbf" => Token::Transform(MathVariant::Transform(TextTransform::Bold)),
    "mathcal" => Token::Transform(MathVariant::Transform(TextTransform::Script)),
    "mathfrak" => Token::Transform(MathVariant::Transform(TextTransform::Fraktur)),
    "mathit" => Token::Transform(MathVariant::Transform(TextTransform::Italic)),
    "mathrm" => Token::Transform(MathVariant::Normal),
    "mathscr" => Token::Transform(MathVariant::Transform(TextTransform::Script)),
    "mathsf" => Token::Transform(MathVariant::Transform(TextTransform::SansSerif)),
    "mathstrut" => Token::HardcodedMathML(r#"<mpadded width="0" style="visibility:hidden"><mo stretchy="false">(</mo></mpadded>"#),
    "mathtt" => Token::Transform(MathVariant::Transform(TextTransform::Monospace)),
    "max" => Token::Lim("max"),
    "measeq" => Token::Relation(ops::MEASURED_BY), // from "stix"
    "measuredangle" => Token::Letter(ops::MEASURED_ANGLE),
    "mercury" => Token::Letter('☿'),
    "mho" => Token::Letter('℧'),
    "mid" => Token::Relation(ops::DIVIDES),
    "middle" => Token::Middle,
    "min" => Token::Lim("min"),
    "mod" => Token::CustomCmd(1, &predefined::MOD),
    "models" => Token::Relation(ops::TRUE),
    "mp" => Token::BinaryOp(ops::MINUS_OR_PLUS_SIGN),
    "mu" => Token::Letter('μ'),
    "multimap" => Token::Relation(ops::MULTIMAP),
    "nLeftarrow" => Token::Relation(ops::LEFTWARDS_DOUBLE_ARROW_WITH_STROKE),
    "nLeftrightarrow" => Token::Relation(ops::LEFT_RIGHT_DOUBLE_ARROW_WITH_STROKE),
    "nRightarrow" => Token::Relation(ops::RIGHTWARDS_DOUBLE_ARROW_WITH_STROKE),
    "nabla" => Token::UprightLetter(ops::NABLA),
    "natural" => Token::Letter('♮'),
    "ne" => Token::Relation(ops::NOT_EQUAL_TO),
    "nearrow" => Token::Relation(ops::NORTH_EAST_ARROW),
    "neg" => Token::Relation(ops::NOT_SIGN),
    "neptune" => Token::Letter('♆'),
    "neq" => Token::Relation(ops::NOT_EQUAL_TO),
    "nequiv" => Token::Relation(ops::NOT_IDENTICAL_TO),
    "nexists" => Token::Relation(ops::THERE_DOES_NOT_EXIST),
    "ng" => Token::Letter('ŋ'),
    "ngeq" => Token::Relation(ops::NEITHER_GREATER_THAN_NOR_EQUAL_TO),
    "ngtr" => Token::Relation(ops::NOT_GREATER_THAN),
    "ngtrless" => Token::Relation(ops::NEITHER_GREATER_THAN_NOR_LESS_THAN),
    "ngtrsim" => Token::Relation(ops::NEITHER_GREATER_THAN_NOR_EQUIVALENT_TO),
    "ni" => Token::Relation(ops::CONTAINS_AS_MEMBER),
    "nleftarrow" => Token::Relation(ops::LEFTWARDS_ARROW_WITH_STROKE),
    "nleftrightarrow" => Token::Relation(ops::LEFT_RIGHT_ARROW_WITH_STROKE),
    "nleq" => Token::Relation(ops::NEITHER_LESS_THAN_NOR_EQUAL_TO),
    "nless" => Token::Relation(ops::NOT_LESS_THAN),
    "nlessgt" => Token::Relation(ops::NEITHER_LESS_THAN_NOR_GREATER_THAN),
    "nlesssim" => Token::Relation(ops::NEITHER_LESS_THAN_NOR_EQUIVALENT_TO),
    "nmid" => Token::Relation(ops::DOES_NOT_DIVIDE),
    "not" => Token::Not,
    "notin" => Token::Relation(ops::NOT_AN_ELEMENT_OF),
    "nparallel" => Token::Relation(ops::NOT_PARALLEL_TO),
    "nprec" => Token::Relation(ops::DOES_NOT_PRECEDE),
    "npreceq" => Token::Relation(ops::DOES_NOT_PRECEDE_OR_EQUAL),
    "nrightarrow" => Token::Relation(ops::RIGHTWARDS_ARROW_WITH_STROKE),
    "nsim" => Token::Relation(ops::NOT_TILDE),
    "nsubset" => Token::Relation(ops::NOT_A_SUBSET_OF),
    "nsubseteq" => Token::Relation(ops::NEITHER_A_SUBSET_OF_NOR_EQUAL_TO),
    "nsucc" => Token::Relation(ops::DOES_NOT_SUCCEED),
    "nsucceq" => Token::Relation(ops::DOES_NOT_SUCCEED_OR_EQUAL),
    "nsupset" => Token::Relation(ops::NOT_A_SUPERSET_OF),
    "nsupseteq" => Token::Relation(ops::NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO),
    "nu" => Token::Letter('ν'),
    "nVDash" => Token::Relation(ops::NEGATED_DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE),
    "nVdash" => Token::Relation(ops::DOES_NOT_FORCE),
    "nvDash" => Token::Relation(ops::NOT_TRUE),
    "nvdash" => Token::Relation(ops::DOES_NOT_PROVE),
    "nwarrow" => Token::Relation(ops::NORTH_WEST_ARROW),
    "o" => Token::Letter('ø'),
    "odot" => Token::Relation(ops::CIRCLED_DOT_OPERATOR),
    "odv" => Token::CustomCmd(2, &predefined::ODV),
    "oe" => Token::Letter('œ'),
    "oiiint" => Token::Integral(ops::VOLUME_INTEGRAL),
    "oiint" => Token::Integral(ops::SURFACE_INTEGRAL),
    "oint" => Token::Integral(ops::CONTOUR_INTEGRAL),
    "ointctrclockwise" => Token::Integral(ops::ANTICLOCKWISE_CONTOUR_INTEGRAL),
    "omega" => Token::Letter('ω'),
    "omicron" => Token::Letter('ο'),
    "ominus" => Token::Relation(ops::CIRCLED_MINUS),
    "operatorname" => Token::OperatorName,
    "oplus" => Token::Relation(ops::CIRCLED_PLUS),
    "oslash" => Token::Relation(ops::CIRCLED_DIVISION_SLASH),
    "otimes" => Token::Relation(ops::CIRCLED_TIMES),
    "overbrace" => Token::OverUnderBrace(ops::TOP_CURLY_BRACKET, true),
    "overbracket" => Token::OverUnderBrace(ops::TOP_SQUARE_BRACKET, true),
    "overleftarrow" => Token::OverUnder(ops::LEFTWARDS_ARROW.as_op(), true, None),
    "overline" => Token::OverUnder(ops::OVERLINE.as_op(), true, None),
    "overparen" => Token::OverUnderBrace(ops::TOP_PARENTHESIS, true),
    "overrightarrow" => Token::OverUnder(ops::RIGHTWARDS_ARROW.as_op(), true, None),
    "overset" => Token::Overset,
    "parallel" => Token::Relation(ops::PARALLEL_TO),
    "partial" => Token::Letter(ops::PARTIAL_DIFFERENTIAL),
    "perp" => Token::Relation(ops::PERPENDICULAR),
    "phi" => Token::Letter('ϕ'),
    "pi" => Token::Letter('π'),
    "pitchfork" => Token::Relation(ops::PITCHFORK),
    "pm" => Token::BinaryOp(ops::PLUS_MINUS_SIGN),
    "pmod" => Token::CustomCmd(1, &predefined::PMOD),
    "pounds" => Token::Letter('£'),
    "prec" => Token::Relation(ops::PRECEDES),
    "precapprox" => Token::Relation(ops::PRECEDES_ABOVE_ALMOST_EQUAL_TO),
    "preccurlyeq" => Token::Relation(ops::PRECEDES_OR_EQUAL_TO),
    "preceq" => Token::Relation(ops::PRECEDES_ABOVE_SINGLE_LINE_EQUALS_SIGN),
    "precnapprox" => Token::Relation(ops::PRECEDES_ABOVE_NOT_ALMOST_EQUAL_TO),
    "precneqq" => Token::Relation(ops::PRECEDES_ABOVE_NOT_EQUAL_TO),
    "precnsim" => Token::Relation(ops::PRECEDES_BUT_NOT_EQUIVALENT_TO),
    "precsim" => Token::Relation(ops::PRECEDES_OR_EQUIVALENT_TO),
    "prime" => Token::Relation(ops::PRIME),
    "prod" => Token::BigOp(ops::N_ARY_PRODUCT),
    "propto" => Token::Relation(ops::PROPORTIONAL_TO),
    "psi" => Token::Letter('ψ'),
    "qprime" => Token::Relation(ops::QUADRUPLE_PRIME),
    "qquad" => Token::Space("2"),
    "quad" => Token::Space("1"),
    "questeq" => Token::Relation(ops::QUESTIONED_EQUAL_TO), // from "stix"
    "rBrace" => Token::Delimiter(ops::RIGHT_WHITE_CURLY_BRACKET),
    "rVert" => Token::Delimiter(ops::DOUBLE_VERTICAL_LINE),
    "rangle" => Token::Delimiter(ops::MATHEMATICAL_RIGHT_ANGLE_BRACKET),
    "rbrace" => Token::Delimiter(ops::RIGHT_CURLY_BRACKET),
    "rbrack" => Token::Delimiter(ops::RIGHT_SQUARE_BRACKET),
    "rceil" => Token::Delimiter(ops::RIGHT_CEILING),
    "rfloor" => Token::Delimiter(ops::RIGHT_FLOOR),
    "rgroup" => Token::Delimiter(ops::MATHEMATICAL_RIGHT_FLATTENED_PARENTHESIS),
    "rhd" => Token::Relation(ops::CONTAINS_AS_NORMAL_SUBGROUP),
    "rho" => Token::Letter('ρ'),
    "right" => Token::Right,
    "rightarrow" => Token::Relation(ops::RIGHTWARDS_ARROW),
    "rightarrowtail" => Token::Relation(ops::RIGHTWARDS_ARROW_WITH_TAIL),
    "rightharpoondown" => Token::Relation(ops::RIGHTWARDS_HARPOON_WITH_BARB_DOWNWARDS),
    "rightharpoonup" => Token::Relation(ops::RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS),
    "rightleftarrows" => Token::Relation(ops::RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW),
    "rightleftharpoons" => Token::Relation(ops::RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON),
    "rightrightarrows" => Token::Relation(ops::RIGHTWARDS_PAIRED_ARROWS),
    "rightsquigarrow" => Token::Relation(ops::RIGHTWARDS_SQUIGGLE_ARROW),
    "rightthreetimes" => Token::Relation(ops::RIGHT_SEMIDIRECT_PRODUCT),
    "risingdotseq" => Token::Relation(ops::IMAGE_OF_OR_APPROXIMATELY_EQUAL_TO),
    "rq" => Token::Letter('’'),
    "rrangle" => Token::Delimiter(ops::Z_NOTATION_RIGHT_BINDING_BRACKET),
    "rrbracket" => Token::Delimiter(ops::MATHEMATICAL_RIGHT_WHITE_SQUARE_BRACKET),
    "rrparenthesis" => Token::Delimiter(ops::Z_NOTATION_RIGHT_IMAGE_BRACKET),
    "rtimes" => Token::Relation(ops::RIGHT_NORMAL_FACTOR_SEMIDIRECT_PRODUCT),
    "rupee" => Token::Letter('₹'),
    "rvert" => Token::Delimiter(ops::VERTICAL_LINE),
    "saturn" => Token::Letter('♄'),
    "scriptscriptstyle" => Token::Style(Style::ScriptScriptStyle),
    "scriptstyle" => Token::Style(Style::ScriptStyle),
    "searrow" => Token::Relation(ops::SOUTH_EAST_ARROW),
    "sec" => Token::Function("sec"),
    "setminus" => Token::Relation(ops::SET_MINUS),
    "sgn" => Token::Function("sgn"),
    "sharp" => Token::Letter('♯'),
    "sigma" => Token::Letter('σ'),
    "sim" => Token::Relation(ops::TILDE_OPERATOR),
    "simeq" => Token::Relation(ops::ASYMPTOTICALLY_EQUAL_TO),
    "sin" => Token::Function("sin"),
    "sinh" => Token::Function("sinh"),
    "slashed" => Token::Slashed,
    "smallsetminus" => Token::Relation(ops::SMALL_REVERSE_SOLIDUS),
    "smile" => Token::Relation(ops::SMILE),
    "spadesuit" => Token::Letter('♠'),
    "sphericalangle" => Token::Letter(ops::SPHERICAL_ANGLE),
    "sqcap" => Token::Relation(ops::SQUARE_CAP),
    "sqcup" => Token::Relation(ops::SQUARE_CUP),
    "sqrt" => Token::Sqrt,
    "sqsubset" => Token::Relation(ops::SQUARE_IMAGE_OF),
    "sqsubseteq" => Token::Relation(ops::SQUARE_IMAGE_OF_OR_EQUAL_TO),
    "sqsupset" => Token::Relation(ops::SQUARE_ORIGINAL_OF),
    "sqsupseteq" => Token::Relation(ops::SQUARE_ORIGINAL_OF_OR_EQUAL_TO),
    "square" => Token::Letter('□'),
    "ss" => Token::Letter('ß'),
    "stackrel" => Token::Overset,
    "star" => Token::Relation(ops::STAR_OPERATOR),
    "stareq" => Token::Relation(ops::STAR_EQUALS), // from "stix"
    "subset" => Token::Relation(ops::SUBSET_OF),
    "subseteq" => Token::Relation(ops::SUBSET_OF_OR_EQUAL_TO),
    "subsetneq" => Token::Relation(ops::SUBSET_OF_WITH_NOT_EQUAL_TO),
    "subsetneqq" => Token::Relation(ops::SUBSET_OF_ABOVE_NOT_EQUAL_TO),
    "succ" => Token::Relation(ops::SUCCEEDS),
    "succapprox" => Token::Relation(ops::SUCCEEDS_ABOVE_ALMOST_EQUAL_TO),
    "succcurlyeq" => Token::Relation(ops::SUCCEEDS_OR_EQUAL_TO),
    "succeq" => Token::Relation(ops::SUCCEEDS_ABOVE_SINGLE_LINE_EQUALS_SIGN),
    "succnapprox" => Token::Relation(ops::SUCCEEDS_ABOVE_NOT_ALMOST_EQUAL_TO),
    "succneqq" => Token::Relation(ops::SUCCEEDS_ABOVE_NOT_EQUAL_TO),
    "succnsim" => Token::Relation(ops::SUCCEEDS_BUT_NOT_EQUIVALENT_TO),
    "succsim" => Token::Relation(ops::SUCCEEDS_OR_EQUIVALENT_TO),
    "sum" => Token::BigOp(ops::N_ARY_SUMMATION),
    "sumint" => Token::BigOp(ops::SUMMATION_WITH_INTEGRAL),
    "sun" => Token::Letter('☼'),
    "sup" => Token::Lim("sup"),
    "supset" => Token::Relation(ops::SUPERSET_OF),
    "supseteq" => Token::Relation(ops::SUPERSET_OF_OR_EQUAL_TO),
    "supsetneq" => Token::Relation(ops::SUPERSET_OF_WITH_NOT_EQUAL_TO),
    "supsetneqq" => Token::Relation(ops::SUPERSET_OF_ABOVE_NOT_EQUAL_TO),
    "swarrow" => Token::Relation(ops::SOUTH_WEST_ARROW),
    "symbf" => Token::Transform(MathVariant::Transform(TextTransform::BoldItalic)),
    "tan" => Token::Function("tan"),
    "tanh" => Token::Function("tanh"),
    "tau" => Token::Letter('τ'),
    "tbinom" => Token::Binom(Some(FracAttr::DisplayStyleFalse)),
    "text" => Token::Text(None),
    "textbf" => Token::Text(Some(TextTransform::Bold)),
    "textit" => Token::Text(Some(TextTransform::Italic)),
    "textstyle" => Token::Style(Style::TextStyle),
    "texttt" => Token::Text(Some(TextTransform::Monospace)),
    "textyen" => Token::Letter('¥'),
    "tfrac" => Token::Frac(Some(FracAttr::DisplayStyleFalse)),
    "th" => Token::Letter('þ'),
    "therefore" => Token::Relation(ops::THEREFORE),
    "theta" => Token::Letter('θ'),
    "tilde" => Token::OverUnder(ops::TILDE, true, Some(OpAttr::StretchyFalse)),
    "times" => Token::BinaryOp(ops::MULTIPLICATION_SIGN),
    "to" => Token::Relation(ops::RIGHTWARDS_ARROW),
    "top" => Token::Letter(ops::DOWN_TACK),
    "triangle" => Token::Letter('△'),
    "triangledown" => Token::Letter(ops::WHITE_DOWN_POINTING_TRIANGLE),
    "triangleleft" => Token::Letter(ops::WHITE_LEFT_POINTING_TRIANGLE),
    "triangleq" => Token::Relation(ops::DELTA_EQUAL_TO),
    "triangleright" => Token::Letter(ops::WHITE_RIGHT_POINTING_TRIANGLE),
    "trprime" => Token::Relation(ops::TRIPLE_PRIME),
    "ulcorner" => Token::Letter(ops::TOP_LEFT_CORNER),
    "underbrace" => Token::OverUnderBrace(ops::BOTTOM_CURLY_BRACKET, false),
    "underbracket" => Token::OverUnderBrace(ops::BOTTOM_SQUARE_BRACKET, false),
    "underline" => Token::OverUnder(ops::LOW_LINE, false, None),
    "underparen" => Token::OverUnderBrace(ops::BOTTOM_PARENTHESIS, false),
    "underset" => Token::Underset,
    "unlhd" => Token::Relation(ops::NORMAL_SUBGROUP_OF_OR_EQUAL_TO),
    "unrhd" => Token::Relation(ops::CONTAINS_AS_NORMAL_SUBGROUP_OR_EQUAL_TO),
    "uparrow" => Token::Delimiter(ops::UPWARDS_ARROW),
    "updownarrow" => Token::Delimiter(ops::UP_DOWN_ARROW),
    "upharpoonleft" => Token::Relation(ops::UPWARDS_HARPOON_WITH_BARB_LEFTWARDS),
    "upharpoonright" => Token::Relation(ops::UPWARDS_HARPOON_WITH_BARB_RIGHTWARDS),
    "uplus" => Token::Relation(ops::MULTISET_UNION),
    "upsilon" => Token::Letter('υ'),
    "upuparrows" => Token::Relation(ops::UPWARDS_PAIRED_ARROWS),
    "uranus" => Token::Letter('♅'),
    "urcorner" => Token::Letter(ops::TOP_RIGHT_CORNER),
    "VDash" => Token::Relation(ops::DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE),
    "vDash" => Token::Relation(ops::TRUE),
    "varDelta" => Token::Letter('Δ'), // italicized
    "varGamma" => Token::Letter('Γ'), // italicized
    "varLambda" => Token::Letter('Λ'), // italicized
    "varOmega" => Token::Letter('Ω'), // italicized
    "varPhi" => Token::Letter('Φ'), // italicized
    "varPi" => Token::Letter('Π'), // italicized
    "varSigma" => Token::Letter('Σ'), // italicized
    "varTheta" => Token::Letter('Θ'), // italicized
    "varUpsilon" => Token::Letter('ϒ'), // italicized
    "varXi" => Token::Letter('Ξ'), // italicized
    "varepsilon" => Token::Letter('ε'),
    "varkappa" => Token::Letter('ϰ'),
    "varnothing" => Token::Letter(ops::EMPTY_SET),
    "varointclockwise" => Token::Integral(ops::CLOCKWISE_CONTOUR_INTEGRAL),
    "varphi" => Token::Letter('φ'),
    "varpi" => Token::Letter('ϖ'),
    "varrho" => Token::Letter('ϱ'),
    "varsigma" => Token::Letter('ς'),
    "vartheta" => Token::Letter('ϑ'),
    "vartriangle" => Token::Letter(ops::WHITE_UP_POINTING_TRIANGLE),
    "vdash" => Token::Relation(ops::RIGHT_TACK),
    "vdots" => Token::Relation(ops::VERTICAL_ELLIPSIS),
    "vec" => Token::OverUnder(ops::RIGHTWARDS_ARROW.as_op(), true, Some(OpAttr::StretchyFalse)),
    "vee" => Token::Relation(ops::LOGICAL_OR),
    "veebar" => Token::Relation(ops::XOR),
    "veeeq" => Token::Relation(ops::EQUIANGULAR_TO), // from "stix"
    "venus" => Token::Letter('♀'),
    "vert" => Token::Delimiter(ops::VERTICAL_LINE),
    "wedge" => Token::Relation(ops::LOGICAL_AND),
    "wedgeq" => Token::Relation(ops::ESTIMATES), // from "stix"
    "widehat" => Token::OverUnder(ops::CIRCUMFLEX_ACCENT, true, None),
    "widetilde" => Token::OverUnder(ops::TILDE, true, None),
    "wp" => Token::Function("℘"),
    "wr" => Token::Relation(ops::WREATH_PRODUCT),
    "xi" => Token::Letter('ξ'),
    "xleftarrow" => Token::CustomCmd(1, &predefined::XLEFTARROW),
    "xrightarrow" => Token::CustomCmd(1, &predefined::XRIGHTARROW),
    "zeta" => Token::Letter('ζ'),
    "{" => Token::Delimiter(ops::LEFT_CURLY_BRACKET),
    "|" => Token::Delimiter(ops::DOUBLE_VERTICAL_LINE),
    "}" => Token::Delimiter(ops::RIGHT_CURLY_BRACKET),
};

pub fn get_command(command: &str) -> Token<'_> {
    match COMMANDS.get(command) {
        Some(token) => *token,
        None => Token::UnknownCommand(command),
    }
}

pub fn get_negated_op(op: Rel) -> Option<Rel> {
    match op {
        ops::ALMOST_EQUAL_TO => Some(ops::NOT_ALMOST_EQUAL_TO),
        ops::APPROXIMATELY_EQUAL_TO => Some(ops::NOT_ASYMPTOTICALLY_EQUAL_TO),
        ops::DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE => {
            Some(ops::NEGATED_DOUBLE_VERTICAL_BAR_DOUBLE_RIGHT_TURNSTILE)
        }
        ops::ELEMENT_OF => Some(ops::NOT_AN_ELEMENT_OF),
        ops::FORCES => Some(ops::DOES_NOT_FORCE),
        ops::GREATER_THAN_OVER_EQUAL_TO => Some(ops::NEITHER_GREATER_THAN_NOR_EQUAL_TO),
        ops::LESS_THAN_OR_EQUAL_TO => Some(ops::NEITHER_LESS_THAN_NOR_EQUAL_TO),
        ops::PRECEDES => Some(ops::DOES_NOT_PRECEDE),
        ops::RIGHT_TACK => Some(ops::DOES_NOT_PROVE),
        ops::SUBSET_OF => Some(ops::NOT_A_SUBSET_OF),
        ops::SUBSET_OF_OR_EQUAL_TO => Some(ops::NEITHER_A_SUBSET_OF_NOR_EQUAL_TO),
        ops::SUCCEEDS => Some(ops::DOES_NOT_SUCCEED),
        ops::SUPERSET_OF => Some(ops::NOT_A_SUPERSET_OF),
        ops::SUPERSET_OF_OR_EQUAL_TO => Some(ops::NEITHER_A_SUPERSET_OF_NOR_EQUAL_TO),
        ops::TRUE => Some(ops::NOT_TRUE),
        _ => None,
    }
}
